<?xml version="1.0" encoding="utf-8"?>
<odoo>
  <data>

    <template id="runbot.docker_from">
FROM <t t-esc="docker_from"/>
    </template>

    <template id="runbot.docker_install_debs">
# Install debian packages
RUN set -x ; \
    apt-get update \
    &amp;&amp; DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends <t t-esc="deb_packages"/> \
    &amp;&amp; rm -rf /var/lib/apt/lists/*
    </template>

    <template id="runbot.docker_install_chrome">
# Install Google Chrome
RUN curl -sSL http://nightly.odoo.com/odoo.key | apt-key add - \
    &amp;&amp; echo "deb http://nightly.odoo.com/deb/<t t-esc="chrome_distrib"/> ./" > /etc/apt/sources.list.d/google-chrome.list \
    &amp;&amp; apt-get update \
    &amp;&amp; apt-get install -y -qq google-chrome-stable=<t t-esc="chrome_version"/> \
    &amp;&amp; rm -rf /var/lib/apt/lists/*
    </template>

    <template id="runbot.docker_install_phantomjs">
# Install phantomjs
RUN curl -sSL https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2  -o /tmp/phantomjs.tar.bz2 \
    &amp;&amp; tar xvfO /tmp/phantomjs.tar.bz2 phantomjs-2.1.1-linux-x86_64/bin/phantomjs > /usr/local/bin/phantomjs \
    &amp;&amp; chmod +x /usr/local/bin/phantomjs \
    &amp;&amp; rm -f /tmp/phantomjs.tar.bz2
    </template>

    <template id="runbot.docker_install_wkhtml">
# Install wkhtml
RUN curl -sSL <t t-esc="wkhtml_url"/> -o /tmp/wkhtml.deb \
    &amp;&amp; apt-get update \
    &amp;&amp; dpkg --force-depends -i /tmp/wkhtml.deb \
    &amp;&amp; apt-get install -y -f --no-install-recommends \
    &amp;&amp; rm /tmp/wkhtml.deb
    </template>

    <template id="runbot.docker_install_nodejs">
# Install nodejs
RUN curl -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \
    &amp;&amp; echo "deb https://deb.nodesource.com/node_<t t-esc="node_version"/>.x `lsb_release -c -s` main" > /etc/apt/sources.list.d/nodesource.list \
    &amp;&amp; apt-get update \
    &amp;&amp; apt-get install -y nodejs
    </template>

    <template id="runbot.docker_install_node_packages">
RUN npm install -g <t t-esc="node_packages"/>
    </template>

    <template id="runbot.docker_install_flamegraph">
ADD https://raw.githubusercontent.com/brendangregg/FlameGraph/master/flamegraph.pl /usr/local/bin/flamegraph.pl
RUN chmod +rx /usr/local/bin/flamegraph.pl
    </template>

    <template id="runbot.docker_install_psql">
RUN curl -sSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
    &amp;&amp; echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -s -c`-pgdg main" > /etc/apt/sources.list.d/pgclient.list \
    &amp;&amp; apt-get update \
    &amp;&amp; DEBIAN_FRONTEND=noninteractive apt-get install -y postgresql-client-<t t-esc="psql_version"/> \
    &amp;&amp; rm -rf /var/lib/apt/lists/*
    </template>

    <template id="runbot.docker_install_odoo_debs">
ADD https://raw.githubusercontent.com/odoo/odoo/<t t-esc="odoo_branch"/>/debian/control /tmp/control.txt
RUN apt-get update \
    &amp;&amp; sed -n '/^Depends:/,/^[A-Z]/p' /tmp/control.txt \
       | awk '/^ [a-z]/ { gsub(/,/,"") ; print }' | sort -u \
       | egrep -v 'postgresql-client' \
       | sed 's/python-imaging/python-pil/'| sed 's/python-pypdf/python-pypdf2/' \
       | DEBIAN_FRONTEND=noninteractive xargs apt-get install -y -qq \
    &amp;&amp; apt-get clean \
    &amp;&amp; rm -rf /var/lib/apt/lists/*
    </template>

    <template id="runbot.docker_install_odoo_python3_requirements">
ADD https://raw.githubusercontent.com/odoo/odoo/<t t-esc="odoo_branch"/>/requirements.txt /root/p3-requirements.txt
RUN pip3 install --no-cache-dir -r /root/p3-requirements.txt coverage==4.5.4 websocket-client astroid==2.4.2 \
    pylint==2.6.0 phonenumbers pyCrypto dbfread==2.0.7 firebase-admin==2.17.0 flamegraph pdfminer.six==20200720 \
    pdf417gen==0.7.1
    </template>

    <template id="runbot.docker_install_odoo_python2_requirements">
ADD https://raw.githubusercontent.com/odoo/odoo/<t t-esc="odoo_branch"/>/requirements.txt /root/p2-requirements.txt
RUN pip install -U setuptools wheel \
    &amp;&amp; pip install --no-cache-dir -r /root/p2-requirements.txt coverage flanker==0.4.38 pylint==1.7.2 phonenumbers redis
    </template>

    <template id="runbot.docker_base">
      <t t-set="docker_from" t-value="docker_from or 'ubuntu:bionic'"></t>
        <t t-call="runbot.docker_from"/>

        <t t-set="deb_packages" t-value="'apt-transport-https build-essential ca-certificates curl ffmpeg file fonts-freefont-ttf fonts-noto-cjk gawk gnupg libldap2-dev libsasl2-dev libxslt1-dev lsb-release node-less ocrmypdf sed sudo unzip xfonts-75dpi zip zlib1g-dev'"/>
        <t t-call="runbot.docker_install_debs"/>

        <t t-call="runbot.docker_install_phantomjs"/>

        <t t-set="deb_packages" t-value="'python python-dev python-pip python3 python3-dev python3-pip python3-setuptools python3-wheel python3-markdown'"/>
        <t t-call="runbot.docker_install_debs"/>

        <t t-set="wkhtml_url" t-value="wkhtml_url or 'https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.bionic_amd64.deb'"/>
        <t t-call="runbot.docker_install_wkhtml"/>

        <t t-set="node_version" t-value="node_version or '15'"/>
        <t t-call="runbot.docker_install_nodejs"/>

        <t t-set="node_packages" t-value="node_packages or 'rtlcss es-check'"/>
        <t t-call="runbot.docker_install_node_packages"/>

        <t t-call="runbot.docker_install_flamegraph"/>

        <t t-set="odoo_branch" t-value="odoo_branch or 'master'"/>
        <t t-call="runbot.docker_install_odoo_debs"/>

        <t t-set="odoo_branch" t-value="odoo_branch or '10.0'"/>
        <t t-call="runbot.docker_install_odoo_debs"/>

        <t t-set="psql_version" t-value="psql_version or '12'"/>
        <t t-call="runbot.docker_install_psql"/>

        <t t-set="chrome_distrib" t-value="chrome_distrib or 'bionic'"/>
        <t t-set="chrome_version" t-value="chrome_version or '80.0.3987.116-1'"/>
        <t t-call="runbot.docker_install_chrome"/>

        <t t-set="odoo_branch" t-value="odoo_branch or 'master'"/>
        <t t-call="runbot.docker_install_odoo_python3_requirements"/>

        <t t-set="odoo_branch" t-value="odoo_branch or '10.0'"/>
        <t t-call="runbot.docker_install_odoo_python2_requirements"/>

    </template>
  </data>
</odoo>
